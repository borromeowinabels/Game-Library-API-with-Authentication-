/*global $:true, Handlebars:true*/
$(function () {
  "use strict";

  var _tpls = {
    wrappers : Handlebars.compile('<ul class="nav nav-list"></ul>'),
    directory : Handlebars.compile('<li><a href="#"><i class="icon icon-folder-close"></i> {{name}}</a></li>'),
    file : Handlebars.compile('<li><a href="#"><i class="icon icon-file"></i> {{name}}</a></li>')
  };


  function show(path, domElt) {
    $.ajax({
      url: '/path',
      data: {path: path},
      method: 'get'
    }).then(draw.bind(undefined, path, domElt));
  }

  function isNonEmptyDirectory(data) {
    return data.type === 'directory' && data.children && data.children.length;
  }

  function draw(path, domRoot, data) {
    if (data.name) { // It's a node
      return drawNode(domRoot, data, path);
    } else {
      return drawCollection(domRoot, data.children || [], path);
    }
  }

  function drawCollection(domRoot, dataArray, parentPath) {
    return dataArray.forEach(drawNode.bind(undefined, _appendWrapper(domRoot), parentPath));
  }

  function drawNode(domRoot, parentPath, data) {
    var node = renderTemplateIntoElt(_tpls[data.type], data, domRoot);
    if (isNonEmptyDirectory(data)) {
      drawCollection(node, data.children);
    }

    node.on('click', toggleChildren.bind(data, [parentPath, data.relativePath].join('/'), node));
  }

  function toggleChildren(path, root, evt) {
    evt.stopPropagation();
    if (this.type !== 'directory') {
      return window.location = '/download/?path=' + encodeURIComponent(path);
      return $.ajax({
        url: '/download',
        method: 'get',
        data: {path: path}
      });
    }
    if (root.children('ul').length) {
      root.find('ul').remove();
    } else {
      show(path, root);
    }
  }

  function renderTemplateIntoElt(tpl, data, elt) {
    return $(tpl(data)).appendTo(elt);
  }

  function _appendWrapper($elt) {
    return renderTemplateIntoElt(_tpls.wrappers, {}, $elt);
  }

  var rootNode = $('#fs_root');
  show('.', _appendWrapper(rootNode));
});
